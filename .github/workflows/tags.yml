
name: CMake

on:
 push:
   tags:
     - v**

jobs: 

  Make_GitHub_Release:
    name   : Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
                        
    - name: Release
      id  : create_release
      uses: actions/create-release@v1
      env :
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Upload archive and binary files for uploading
          draft: false
          prerelease: false

  build_packages_Linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure Solver
      run: cmake ${{github.workspace}} -B ${{github.workspace}}/build -D PRINT_VERSION=${GITHUB_REF_NAME#v}

    - name: Build Solver
      run: cmake --build ${{github.workspace}}/build

    - name: Build package
      run: cmake --build ${{github.workspace}}/build --target package

    - name: Build source package
      run: cmake --build ${{github.workspace}}/build --target package_source

    - name: Make a release
      uses: ncipollo/release-action@v1.10.0
      with:
        artifacts: "build/*.deb,build/*.tar.gz,build/*.zip,build/*.rpm"
        token: ${{ secrets.TOKEN }}

  Windows_Binary:
    needs: Make_GitHub_Release
    runs-on: windows-latest
    steps:
    - name: Git clone my repo
      uses: actions/checkout@v1

    - name: Prepare environment
      run : |
        cmake --version
    - name: Build binary files
      run : |
        mkdir cmake && cd cmake
        cmake -DGENERATOR=BIN ..
        cmake --build .
        cpack -C CPackConfig.cmake -G WIX
    - name: Upload MSI
      id  : MSI
      uses: actions/upload-release-asset@v1
      env :
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with: 
       upload_url: ${{ needs.Make_GitHub_Release.outputs.upload_url }}
       asset_path: ./cmake/solver-0.1.1-win64.msi
       asset_name: solver_app-${{ github.ref_name }}.msi
       asset_content_type: application/msi

  MacOs_Binary:    
    needs: Make_GitHub_Release
    runs-on: macos-latest
    steps:
      - name: Git clone my repo
        uses: actions/checkout@v1

      - name: Prepare environment
        run : |
          cmake --version
      - name: Build binary files
        run : |
          mkdir cmake && cd cmake
          cmake -DGENERATOR=BIN ..
          make
          cpack -G DragNDrop
      - name: Upload DMG
        id  : MSI
        uses: actions/upload-release-asset@v1
        env :
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with: 
          upload_url: ${{ needs.Make_GitHub_Release.outputs.upload_url }}
          asset_path: ./cmake/solver-0.1.1-Darwin.dmg
          asset_name: solver_app-${{ github.ref_name }}.dmg
          asset_content_type: application/dmg
